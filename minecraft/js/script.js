document.addEventListener("DOMContentLoaded", function () {
    loadNavbar();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
document.getElementById("whitelistForm").addEventListener("submit", function(event) {
    event.preventDefault();

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤–≤–æ–¥–∞ –æ—Ç XSS
    function sanitize(input) {
        return input.replace(/[<>]/g, "");
    }

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
    const nickname = sanitize(document.getElementById("nickname").value.trim());
    const age = sanitize(document.getElementById("age").value.trim());
    const contact = sanitize(document.getElementById("contact").value.trim());
    const source = sanitize(document.getElementById("source").value.trim());
    const experience = sanitize(document.getElementById("experience").value.trim());
    const rp = sanitize(document.getElementById("rp").value);
    const plans = sanitize(document.getElementById("plans").value.trim());
    const time = sanitize(document.getElementById("time").value.trim());
    const horror = sanitize(document.getElementById("horror").value.trim());
    const fears = sanitize(document.getElementById("fears").value.trim());
    const health = sanitize(document.getElementById("health").value.trim());
    const playstyle = sanitize(document.getElementById("playstyle").value);
    const cheatsChecked = document.getElementById("cheats").checked;
    const responsibilityChecked = document.getElementById("responsibility").checked;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª–µ–π
    if (!nickname || !age || !source || !experience || !plans || !time || !horror || !fears || !health || !responsibilityChecked) {
        document.getElementById("status").innerText = "‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!";
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
    if (age < 18) {
        document.getElementById("status").innerText = "‚õî –í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18 –ª–µ—Ç –∏–ª–∏ –±–æ–ª—å—à–µ!";
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∏–≥—Ä–æ–∫–∞
    if (!cheatsChecked) {
        document.getElementById("status").innerText = "‚ö†Ô∏è –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, —á—Ç–æ –Ω–µ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–∏—Ç—ã!";
        return;
    }

    document.getElementById("status").innerText = "‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏...";

    // Telegram-–±–æ—Ç
    const botToken = "7745335635:AAGbPdzXplwqbMky-xgJ9KOhsWln5z6toYo"; // –¢–≤–æ–π —Ç–æ–∫–µ–Ω
    const chatIds = ["250356592", "5206122340"]; // ID —á–∞—Ç–æ–≤

    const message = `üî• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ Whitelist!*\n\n` +
        `üë§ *–ù–∏–∫:* ${nickname}\n` +
        `üéÇ *–í–æ–∑—Ä–∞—Å—Ç:* ${age}\n` +
        `üìû *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* ${contact || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}\n` +
        `üîó *–ö–∞–∫ –Ω–∞—à—ë–ª —Å–µ—Ä–≤–µ—Ä:* ${source}\n` +
        `üéÆ *–û–ø—ã—Ç –≤ —Ö–æ—Ä—Ä–æ—Ä/—Ö–∞—Ä–¥–∫–æ—Ä-–∏–≥—Ä–∞—Ö:* ${experience}\n` +
        `üé≠ *RP:* ${rp}\n` +
        `üéØ *–ü–ª–∞–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:* ${plans}\n` +
        `üïí *–í—Ä–µ–º—è –≤ –Ω–µ–¥–µ–ª—é:* ${time}\n` +
        `üëª *–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Ö–æ—Ä—Ä–æ—Ä—É:* ${horror}\n` +
        `‚ö†Ô∏è *–°—Ç—Ä–∞—Ö–∏:* ${fears}\n` +
        `üè• *–ó–¥–æ—Ä–æ–≤—å–µ:* ${health}\n` +
        `üéÆ *–°—Ç–∏–ª—å –∏–≥—Ä—ã:* ${playstyle}\n` +
        `‚úÖ *–ß–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞:* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ\n` +
        `‚ö†Ô∏è *–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:* –ü—Ä–∏–Ω—è—Ç–∞`;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    chatIds.forEach(chatId => {
        fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: "Markdown"
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                document.getElementById("status").innerText = "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!";
            } else {
                document.getElementById("status").innerText = "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏!";
            }
        })
        .catch(() => {
            document.getElementById("status").innerText = "üö´ –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram!";
        });
    });
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
function loadNavbar() {
    fetch('minecraft/navbar/navbarminecraft.html')
        .then(response => {
            if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status}`);
            return response.text();
        })
        .then(html => {
            const navbarElement = document.getElementById('navbar');
            if (navbarElement) {
                navbarElement.innerHTML = html;
            } else {
                console.error("–≠–ª–µ–º–µ–Ω—Ç #navbar –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        })
        .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é:', error));
}
