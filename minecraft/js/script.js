document.addEventListener("DOMContentLoaded", function () {
    loadNavbar();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã whitelistForm
document.getElementById("whitelistForm").addEventListener("submit", function(event) {
    event.preventDefault();

    const nickname = document.getElementById("nickname").value.trim();
    const source = document.getElementById("source").value.trim();
    const opinion = document.getElementById("opinion").value.trim();
    const plans = document.getElementById("plans").value.trim();

    if (!nickname || !source || !opinion || !plans) {
        document.getElementById("status").innerText = "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!";
        return;
    }

    document.getElementById("status").innerText = "–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...";

    // –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID —á–∞—Ç–∞ —Ö—Ä–∞–Ω–∏–º –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!
    const botToken = "7745335635:AAGbPdzXplwqbMky-xgJ9KOhsWln5z6toYo"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    const chatId = "250356592"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π ID

    const message = `üî• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ Whitelist!\n\nüë§ –ù–∏–∫: ${nickname}\nüîó –ö–∞–∫ –Ω–∞—à–µ–ª: ${source}\nüí¨ –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º: ${opinion}\nüéØ –ü–ª–∞–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: ${plans}`;

    fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ chat_id: chatId, text: message })
    })
    .then(response => response.json())
    .then(data => {
        if (data.ok) {
            document.getElementById("status").innerText = "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!";
        } else {
            document.getElementById("status").innerText = "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏!";
        }
    })
    .catch(error => {
        document.getElementById("status").innerText = "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è!";
    });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã appeal-form
document.getElementById('appeal-form')?.addEventListener('submit', function(event) {
    event.preventDefault();  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = new FormData(this);

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç JSON
    const formObject = {};
    formData.forEach((value, key) => {
        formObject[key] = value;
    });

    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    const message = `
        New Appeal Submission:
        Username: ${formObject.username}
        Telegram Nick: ${formObject['telegram-nick']}
        Reason for Appeal: ${formObject['appeal-reason']}
        Evidence: ${formObject.evidence ? 'Provided' : 'Not provided'}
    `;

    // URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram API
    const telegramUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    fetch(telegramUrl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            chat_id: chatId,
            text: message
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.ok) {
            alert('Your appeal has been submitted successfully!');
        } else {
            alert('There was an error submitting your appeal.');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error submitting appeal.');
    });
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
function loadNavbar() {
    fetch('minecraft/navbar/navbarminecraft.html')
        .then(response => {
            if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status}`);
            return response.text();
        })
        .then(html => {
            const navbarElement = document.getElementById('navbar');
            if (navbarElement) {
                navbarElement.innerHTML = html;
            } else {
                console.error("–≠–ª–µ–º–µ–Ω—Ç #navbar –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        })
        .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é:', error));
}
